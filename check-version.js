const fs = require('fs');
const path = require('path');

const versionFile = path.join(__dirname, 'public', 'data', 'version.json');

// –ó—á–∏—Ç—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –≤–µ—Ä—Å—ñ—é
const versionData = JSON.parse(fs.readFileSync(versionFile, 'utf8'));
const currentVersion = versionData.version;

// –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ–≤—É –≤–µ—Ä—Å—ñ—é –∑ –∞—Ä–≥—É–º–µ–Ω—Ç—É –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
const newVersion = process.argv[2];

if (!newVersion) {
    console.error('‚ùå –í–∫–∞–∂—ñ—Ç—å –Ω–æ–≤—É –≤–µ—Ä—Å—ñ—é —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç: node check-version.js 1.0.3');
    process.exit(1);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –≤–µ—Ä—Å—ñ–π
function compareVersions(a, b) {
    const pa = a.split('.').map(Number);
    const pb = b.split('.').map(Number);
    for (let i = 0; i < Math.max(pa.length, pb.length); i++) {
        const na = pa[i] || 0;
        const nb = pb[i] || 0;
        if (na > nb) return 1;
        if (na < nb) return -1;
    }
    return 0;
}

const cmp = compareVersions(newVersion, currentVersion);

if (cmp <= 0) {
    console.error(`‚ùå –ù–æ–≤–∞ –≤–µ—Ä—Å—ñ—è (${newVersion}) –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ –ø–æ—Ç–æ—á–Ω—É (${currentVersion})!`);
    console.error('üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –ó–∞–ø—É—Å—Ç–∏ –¥–µ–ø–ª–æ–π —Ç–∞–∫ ‚Äî node check-version.js <–ù–û–í–ê_–í–ï–†–°–Ü–Ø> && firebase deploy --only hosting');
    process.exit(1);
}

// –û–Ω–æ–≤–ª—é—î–º–æ –≤–µ—Ä—Å—ñ—é —É —Ñ–∞–π–ª—ñ
versionData.version = newVersion;
fs.writeFileSync(versionFile, JSON.stringify(versionData, null, 2));
console.log(`‚úÖ –í–µ—Ä—Å—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${newVersion}`);
